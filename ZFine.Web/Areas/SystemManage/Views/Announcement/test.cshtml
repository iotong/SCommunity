@{
    ViewBag.Title = "test";
    Layout = "~/Views/Shared/_Index.cshtml";
}
<!doctype html>
<html lang="en">
<head>
    <title>GET VIDEO</title>
    <meta charset="utf-8">
</head>
<body>

    <video id="video" style="text-align:center;width:500px;height:500px"></video>
    <canvas id="canvas" width="450px" height="450px"></canvas>
    <button id="snap" style="text-align:center" onclick="takePhoto()">拍照</button>
    
    <!--base64绘制-->
    <img id="imgvideo" style="display:none;" width="640" height="480" src="" />

    <script src="~/layer/mobile/layer.js"></script>
    <script>
        $(function () {

            getMedia();
        })
        function getMedia() {
            let constraints = {
                video: { width: 500, height: 500 },
                audio: true
            };
            //获得video摄像头区域
            let video = document.getElementById("video");
            //这里介绍新的方法，返回一个 Promise对象
            // 这个Promise对象返回成功后的回调函数带一个 MediaStream 对象作为其参数
            // then()是Promise对象里的方法
            // then()方法是异步执行，当then()前的方法执行完后再执行then()内部的程序
            // 避免数据没有获取到
            let promise = navigator.mediaDevices.getUserMedia(constraints);
            promise.then(function (MediaStream) {
                video.srcObject = MediaStream;
                video.play();
            });
        }

        function takePhoto() {
            debugger
            //获得Canvas对象
            let video = document.getElementById("video");
            let canvas = document.getElementById("canvas");
            let ctx = canvas.getContext('2d');
            ctx.drawImage(video, 0, 0, 500, 500);
            var img = canvas.toDataURL("image/jpeg", 0.5);
            //视频转换到canvs
            $('#imgvideo').attr('src', img);

            // 调用方式
            // 参数一： 选择器，代表canvas
            // 参数二： 图片名称，可选
            downloadCanvasIamge('canvas', 'imgvideo');
            //关闭摄像窗口页面
            setTimeout(function () {
                custom_close();
            }, 1100);


        }
        // 下载Canvas元素的图片
        function downloadCanvasIamge(selector, name) {
            // 通过选择器获取canvas元素
            var canvas = document.querySelector(selector)
            // 使用toDataURL方法将图像转换被base64编码的URL字符串
            var url = canvas.toDataURL('image/jpeg')
            // 生成一个a元素
            var a = document.createElement('a')
            // 创建一个单击事件
            var event = new MouseEvent('click')

            // 将a的download属性设置为我们想要下载的图片名称，若name不存在则使用‘下载图片名称’作为默认名称
            a.download = name || '下载图片名称'
            // 将生成的URL设置为a.href属性
            a.href = url
            console.log(url)
            // 触发a的单击事件
            a.dispatchEvent(event)
        }
      
    </script>
</body>
</html>
